set nocompatible

" Initialize Pathogen
runtime bundle/vim-pathogen/autoload/pathogen.vim
execute pathogen#infect()

" Enable syntax highlighting
syntax on
filetype plugin indent on

" 256 Color support
set t_Co=256

" Backup dir
set backup
set backupdir=~/.vimbackup
set dir=~/.vimbackup

" UTF-8
set encoding=utf-8
set fileencoding=utf-8
set termencoding=utf-8

set backspace=indent,eol,start

" Copy / paste support by F11
set pastetoggle=<F11>

" Some usefull search settings
set ignorecase
set incsearch
set smartcase
set showmatch
set hlsearch

set background=dark

if has("unix")
    "colorscheme slate
else
    colorscheme solarized
    "let g:solarized_termtrans=1
    "let g:solarized_termcolors=256
    "let g:solarized_contrast="high"
    "let g:solarized_visibility="high"
endif

" Display settings
set cmdheight=2
set laststatus=2
set scrolloff=3
set lazyredraw
set showcmd
set showmode
set number
highlight Cursor guibg=Blue guifg=None

let g:airline_powerline_fonts=1

"if has("gui_running")
"    set guifont=Anonymous\ Pro:h13
"    set gcr=n:blinkon0
"    set cursorline
"    set guioptions-=T
"    set anti
"    set columns=100
"    set lines=61
"    set winpos 0 0
"    colorscheme smyck
"endif

" Remap leader to comma
let mapleader=","
nmap <leader>l :set list!<CR>
set listchars=tab:»\ ,eol:¬

set vb t_vb=
set backspace=2
set textwidth=79
set showbreak=~~
set linebreak
set tabstop=4
set shiftwidth=4
set softtabstop=4
set expandtab
set smartindent
set smarttab
set ruler
set history=1000

set splitbelow
set splitright

set wildmenu
set wildmode=longest,full
set wildignore=.o,.so,.*~,*.obj,*.bak,*.exe,*.pyc,*.swp

" Enable automatic title setting for terminals
set title
set titleold="Terminal"
set titlestring=%F\ -\ Vim

set noswapfile

" vim-indent
let g:indent_guides_auto_colors=0
hi IndentGuidesOdd  ctermbg=black
hi IndentGuidesEven ctermbg=darkgrey

" Mappings
nnoremap <f1> :BufExplorer<cr>
nnoremap <f3> :TagbarToggle<cr>

" NERDtree
nnoremap <f2> :NERDTreeToggle<cr>
let g:NERDTreeWinSize=40
let g:NERDTreeMouseMode=2
let NERDTreeIgnore=['\~$', '\.pyc$', '\.pyo$', '\.class$', 'pip-log\.txt$', '\.o$']

" Tagbar
let g:tagbar_usearrows=1
let g:tagbar_autofocus = 1

" Python mode
let g:pymode_rope = 0

" Documentation
let g:pymode_doc = 1
let g:pymode_doc_key = 'K'

"Linting
let g:pymode_lint = 1
let g:pymode_lint_checker = "pyflakes,pep8"
" Auto check on save
let g:pymode_lint_write = 1

" Support virtualenv
let g:pymode_virtualenv = 1

" Enable breakpoints plugin
let g:pymode_breakpoint = 1
let g:pymode_breakpoint_key = '<leader>b'

" syntax highlighting
let g:pymode_syntax = 1
let g:pymode_syntax_all = 1
let g:pymode_syntax_indent_errors = g:pymode_syntax_all
let g:pymode_syntax_space_errors = g:pymode_syntax_all

" Don't autofold code
let g:pymode_folding = 0

" Autoremove unused whitespaces
let g:pymode_utils_whitespaces = 1

" run pep8+pyflakes+pylint validator with \8
autocmd FileType python map <buffer> <leader>8 :PyLint<CR>

" make Python follow PEP8 ( http://www.python.org/dev/peps/pep-0008/ )
au FileType python set softtabstop=4 tabstop=4 shiftwidth=4 textwidth=79

" Save as sudo
ca w!! w !sudo tee "%"

" Strip trailing whitespaces on each save
fun! <SID>StripTrailingWhitespaces()
    let l = line(".")
    let c = col(".")
    %s/\s\+$//e
    call cursor(l, c)
endfun
autocmd BufWritePre * :call <SID>StripTrailingWhitespaces()

" add json syntax highlighting
au BufNewFile,BufRead *.json set ft=javascript

